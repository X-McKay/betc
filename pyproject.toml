[project]
name = "betc"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "X-McKay", email = "aldmckay@gmail.com" }]
dependencies = [
    "datasets>=3.0.2",
    "transformers>=4.46.0",
    "mlflow>=2.17.1",
    "tensorboard>=2.18.0",
    "torch>=2.5.0",
    "pydantic>=2.9.2",
    "scikit-learn>=1.5.2",
    "tqdm>=4.66.5",
]
readme = "README.md"
requires-python = ">= 3.9"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "types-tqdm>=4.65.0",
    "types-PyYAML>=6.0.12.12",
]

[tool.ruff]
line-length = 110
target-version = "py39"
extend-exclude = [".pytest_cache", ".ruff_cache"]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "PT",  # flake8-pytest-style
]

[tool.ruff.lint]
ignore = [
    "F841",    # local variable is assigned to but never used
    "PLR0913", # too many arguments for function
    "PLW2901", # for loop variable overwritten
    "C901",    # train is too complex
    "PLR0915", # too many statements
    "B904",    # exception raising
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"] # Ignore assert statements in tests

[tool.ruff.isort]
known-first-party = ["betc"]
force-single-line = true

[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
pretty = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=email_classifier --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/betc"]

[project.scripts]
experiments = 'betc.model.run_experiments:main'
